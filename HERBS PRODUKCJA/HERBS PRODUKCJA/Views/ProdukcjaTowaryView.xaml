<UserControl x:Class="HERBS_PRODUKCJA.Views.ProdukcjaTowaryView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HERBS_PRODUKCJA.Views"
             mc:Ignorable="d"  
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
             >

    

    <Grid  HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Stretch">
        <Grid.RowDefinitions >
            <RowDefinition Height="60"/>
            <RowDefinition Height="39*"  />
            <RowDefinition />
            <RowDefinition Height="60"/>
            <RowDefinition Height="120"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>


        <TextBox  x:Name="txtSSNoFilter"
                  
                                          Text="{Binding TWName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"                                       
                                          HorizontalAlignment="Stretch" 
                                            Grid.Column="1"
                                          Grid.Row="0" Background="Azure" Height="21" VerticalAlignment="Top" TextChanged="txtSSNoFilter_TextChanged">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="TextChanged">
                    <i:InvokeCommandAction Command="{Binding Path=GetWorkOrderCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBox>
        <Grid Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Stretch" Margin="0,0,0,0" Grid.RowSpan="2" >
            <Grid.RowDefinitions >
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>

                <ColumnDefinition  Width="190" />
            </Grid.ColumnDefinitions>
            <Button Grid.Row="0" Content="SUROWCE" Command="{Binding PobierzWgTypuCommand}" CommandParameter="SR" Background="LightSkyBlue" />
            <Button Grid.Row="1" Content="WYROBY GOTOWE" Command="{Binding PobierzWgTypuCommand}" CommandParameter="WG" Background="White"/>
            <Button Grid.Row="2" Content="PÓŁPRODUKTY" Command="{Binding PobierzWgTypuCommand}" CommandParameter="PP" Background="LightGreen" />
            <Button Grid.Row="4" Content="ODPADY" Command="{Binding PobierzWgTypuCommand}" CommandParameter="OD" Background="Red"/>
            <Button Grid.Row="3" Content="PRODUKTY UBOCZNE" Command="{Binding PobierzWgTypuCommand}" CommandParameter="PU" Background="Yellow"/>
            <Button Grid.Row="5" Content="OPAKOWANIA" Command="{Binding PobierzWgTypuCommand}" CommandParameter="OP" Background="BurlyWood"/>
            <Button Grid.Row="6" Content="PRODUKCJA POCZEKALNIA" Command="{Binding PobierzWgTypuCommand}" CommandParameter="O" Visibility="Hidden"/>
            <Button Grid.Row="6" Content="NASIONA" Command="{Binding PobierzWgTypuCommand}" CommandParameter="NS" Visibility="Visible" Background="Beige"/>
            <Button Grid.Row="7" Content="WSZYSTKIE" Command="{Binding PobierzWgTypuCommand}" CommandParameter="ALL"/>
        
        </Grid>
        <Button HorizontalAlignment="Right" Grid.Row="0" Grid.Column="1" Content="Odśwież" Width="100" Height="25"  Margin="0,18"  Command="{Binding OdswiezCommand}"/>
        <DataGrid Name="towaryDataGrid"
            AutoGenerateColumns="False"
        		ItemsSource="{Binding ProdDWs}"
        		HeadersVisibility="Column"
        		SelectedItem="{Binding SelectedProdDW, Mode=TwoWay}"
        		SelectionMode="Extended"
        		CanUserAddRows="False"
                 VerticalAlignment="Stretch"
        		CanUserDeleteRows="False"  FontSize="10"
                  Grid.Row="1"
                  Grid.Column="1" Grid.RowSpan="2"
                  >
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Edycja SPECYFIKACJI PAKOWANIA" Command="{Binding SpecyfikacjaEditCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}" />
                </ContextMenu>
            </DataGrid.ContextMenu>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}"  CommandParameter="{Binding ElementName=towaryDataGrid, Path=SelectedItem}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ProdukcjaDW.typ_produktu}" Value="WG">
                            <Setter Property="Background" Value="White" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ProdukcjaDW.typ_produktu}" Value="PP">
                            <Setter Property="Background" Value="LightGreen" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ProdukcjaDW.typ_produktu}" Value="PU">
                            <Setter Property="Background" Value="Yellow" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ProdukcjaDW.typ_produktu}" Value="OD">
                            <Setter Property="Background" Value="Red" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ProdukcjaDW.typ_produktu}" Value="SR">
                            <Setter Property="Background" Value="LightSkyBlue" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ProdukcjaDW.typ_produktu}" Value="OP">
                            <Setter Property="Background" Value="BurlyWood" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>
                <DataGridCheckBoxColumn Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="25" IsReadOnly="False" >
                    <DataGridCheckBoxColumn.HeaderTemplate>
                        <DataTemplate x:Name="dtAllChkBx">
                            <CheckBox x:Name="cbxAll" Content="All" Width="25" IsChecked="{Binding DataContext.AllSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        </DataTemplate>
                    </DataGridCheckBoxColumn.HeaderTemplate>
                </DataGridCheckBoxColumn>
                <DataGridTextColumn Binding="{Binding ProdukcjaDW.typ_produktu, Mode=TwoWay}"  Header="TYP" IsReadOnly="True" FontWeight="Bold"  Width="40" />
                <DataGridTextColumn Binding="{Binding ProdukcjaDW.kod, Mode=TwoWay}"  Header="Dostawa" IsReadOnly="True" FontWeight="Bold"  Width="120" />
                <DataGridTextColumn Binding="{Binding ProdukcjaDW.nr_partii, Mode=TwoWay}"  Header="PARTIA" IsReadOnly="True" FontWeight="Bold"  Width="80"  FontSize="14"  />
                <DataGridTextColumn Binding="{Binding ProdukcjaDW.data, Mode=TwoWay, StringFormat='yyyy-MM-dd'}"  Header="data" IsReadOnly="True" FontWeight="Bold"  Width="80" />
                
                <DataGridTextColumn Binding="{Binding ProdukcjaDW.khnazwa, Mode=TwoWay}"  Header="Kh" IsReadOnly="True" FontWeight="Bold"  Width="150"/>
                <DataGridTextColumn Binding="{Binding ProdukcjaDW.kodtw, Mode=TwoWay}" MaxWidth="250" MinWidth="250" Header="Towar" IsReadOnly="True" FontWeight="Bold" />
                <DataGridTextColumn Binding="{Binding ProdukcjaDW.iloscpz, Mode=TwoWay}"  Header="Przyjęcie" IsReadOnly="True" FontStyle="Normal" FontSize="14"/>
                <DataGridTextColumn Binding="{Binding ProdukcjaDW.stan, Mode=TwoWay}"  Header="stan" IsReadOnly="True" FontStyle="Normal" FontSize="14"/>
                <DataGridTextColumn Binding="{Binding ProdukcjaDW.iloscprod, Mode=TwoWay}"  Header="Produkcja" IsReadOnly="True" FontStyle="Italic" />
                <DataGridTextColumn Binding="{Binding ProdukcjaDW_List.iloscdost , Mode=TwoWay}"  Header="Dostępne" IsReadOnly="True" FontWeight="Bold"  FontSize="14" />
                <DataGridTextColumn Binding="{Binding ProdukcjaDW_List.frakcja, Mode=TwoWay}"  Header="frakcja" IsReadOnly="True" FontWeight="Bold" />
                <DataGridTextColumn Binding="{Binding ProdukcjaDW_List.opis, Mode=TwoWay}"  Header="opis" IsReadOnly="True" FontWeight="Bold" />
            </DataGrid.Columns>
        </DataGrid>

        <Grid  Grid.Row="3" Grid.Column="1" Height="50" HorizontalAlignment="Right" Margin="0,5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition  Width="100" />
                    <ColumnDefinition  Width="100" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions >
                    <RowDefinition  />
                    <RowDefinition />
                    
                </Grid.RowDefinitions>
                <Button Grid.Row="0" Grid.Column="0" Content="Raport" VerticalAlignment="Center" Command="{Binding RaportCommand}"   HorizontalAlignment="Stretch"  />
                <Button Grid.Row="0" Grid.Column="1" Content="Operacje" VerticalAlignment="Center" Command="{Binding CommandShowPopup}" CommandParameter="{Binding ElementName=btnMenuPopup}"  HorizontalAlignment="Stretch"  />
                <Popup Grid.Row="1" x:Name="btnMenuPopup" Placement="Top" StaysOpen="False" >
                    <Border BorderBrush="Black" BorderThickness="2" CornerRadius="2">
                        <Menu>
                            <MenuItem />
                            <Separator />
                            <MenuItem Header="Ustaw jako: SUROWIEC (SR)" Command="{Binding UstalTypProduktuCommand}" CommandParameter="SR" />
                            <MenuItem Header="Ustaw jako: WYRÓB GOTOWY (WG)" Command="{Binding UstalTypProduktuCommand}" CommandParameter="WG"/>
                            <Separator />
                            <MenuItem Header="Ustaw jako: PÓŁPRODUKT (PP)" Command="{Binding UstalTypProduktuCommand}" CommandParameter="PP" />
                            <MenuItem Header="Ustaw jako: PRODUKT UBOCZNY (PU)" Command="{Binding UstalTypProduktuCommand}" CommandParameter="PU" />
                            <MenuItem Header="Ustaw jako: ODPAD (OD)" Command="{Binding UstalTypProduktuCommand}" CommandParameter="OD" />
                            <Separator />
                            <MenuItem Header="Ustaw jako: OPAKOWANIE (OP)" Command="{Binding UstalTypProduktuCommand}" CommandParameter="OP" />
                            <MenuItem Header="Ustaw jako: NASIONA SIEWNE (NS)" Command="{Binding UstalTypProduktuCommand}" CommandParameter="NS" />
                            <Separator />
                            <MenuItem Header="Wydaj na zewnątrz (WZ)" Command="{Binding WydajCommand}" CommandParameter="WZ" />
                            <Menu.ItemsPanel>
                                
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel Orientation = "Vertical" VerticalAlignment="Top" />
                                </ItemsPanelTemplate>
                            </Menu.ItemsPanel>
                        </Menu>
                    </Border>
                </Popup>
            </Grid>
        </Grid>
        <Grid Grid.Column="0" Grid.Row="4" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"  />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions >
                <RowDefinition Height="30" />
                <RowDefinition />

            </Grid.RowDefinitions>
            <Button Content="HISTORIA" Command="{Binding HistoriaCommand}" HorizontalAlignment="Center"/>
        </Grid>
        
        <DataGrid Margin="0,5,0,5" Grid.Column="1" Grid.Row="4"
                          ItemsSource="{Binding Specyfikacje, Mode=TwoWay}"
                                		HeadersVisibility="Column"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          AutoGenerateColumns="False"
                  IsReadOnly="True"
                                		
                          >
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding kodtw, Mode=TwoWay}"  Header="kod towaru"   />
                <DataGridTextColumn Binding="{Binding MAGAZYNY.nazwa, Mode=TwoWay, StringFormat=N2, UpdateSourceTrigger=PropertyChanged }"  Header="magazyn" Width="150"  />
                <DataGridTextColumn Binding="{Binding OPAKOWANIA_RODZAJE.nazwa, Mode=TwoWay}"  Header="opakowanie"   />
                
                <DataGridTextColumn Binding="{Binding ilosc_opakowania, Mode=TwoWay, StringFormat=N2, UpdateSourceTrigger=PropertyChanged }"  Header="ilość opakownaia"   />
                <DataGridTextColumn Binding="{Binding ilewopakowaniu, Mode=TwoWay, StringFormat=N2, UpdateSourceTrigger=PropertyChanged }"  Header="w opakowaniu"   />
                <DataGridTextColumn Binding="{Binding waga_opakowania, Mode=TwoWay, StringFormat=N2, UpdateSourceTrigger=PropertyChanged }"  Header="waga opakownaia"   />
                <DataGridTextColumn Binding="{Binding OPAKOWANIA_RODZAJE1.nazwa, Mode=TwoWay}"  Header="opakowanie2"   />
                <DataGridTextColumn Binding="{Binding ilosc_opakowania2, Mode=TwoWay, StringFormat=N2, UpdateSourceTrigger=PropertyChanged }"  Header="ilość opakownaia2"   />

            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
